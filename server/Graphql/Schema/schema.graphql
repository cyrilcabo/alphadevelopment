type Query {
	products(featured: Boolean, skip: Int): [ProductSummary]!
	product(pid: String!): Product!
	reviews(pid: String!, skip: Int): [Review]!
}

type Mutation {
	subscribe(email: String!): StatusMessage!
	like(productId: String!, name: String, msg: String, rating: Int!): Like!
}

type StatusMessage {
	error: Boolean!
	message: String!
}

type Like {
	success: Boolean!
	_id: String
	name: String
	msg: String
	rating: Int
}

type Review {
	_id: String!
	name: String
	msg: String
	rating: Int!
	datePosted: Date
}

type Product {
	_id: ID!
	title: String!
	link: String!
	github: String!
	category: String!
	techs: [String]!
	images: [String]!
	featured: Boolean!
	pid: String!
	details: ProductDetails!
}

type ProductSummary {
	_id: ID!
	title: String!
	link: String!
	github: String!
	techs: [String!]
	category: String!
	featured: Boolean!
	pid: String!
	summary: String!
}

type ProductDetails {
	intro: String!
	features: [ProductFeature]
}

type ProductFeature {
	title: String!
	details: String!
}

scalar Date